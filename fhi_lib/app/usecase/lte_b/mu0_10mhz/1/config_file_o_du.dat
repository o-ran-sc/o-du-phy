#******************************************************************************
#
#   Copyright (c) 2019 Intel.
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.
#
#******************************************************************************/


# This is simple configuration file. Use '#' sign for comments
appMode=0 # O-DU  (0) | RU(1)
xranRanTech=1 # 5G NR (0) | LTE (1)
xranMode=1 # Category A  (0) (precoder in O-DU) | Category B (1) (precoder in O-RU)
ccNum=1 # Number of Componnent Carriers (CC) per ETH port with XRAN protocol (default:1 max: 12)
antNum=8 # Number of Antennas per CC (default: 4) or number of Digital streams for Category B
antNumUL=4 # Cat B: UL Number of Antennas per CC (default: 8) or number of UL Digital streams for Category B
antElmTRx=32 #number of Antenna Elements for Cat B default 32T32R

#UEs
muMimoUEs=8 #number of UEs serviced by MU-MIMO system. Number of independent beams within the same Freq/Time resources
DlLayersPerUe=1 #number of RX anntennas on DL UE side
UlLayersPerUe=1 #number of TX anntennas on UL UE side
##Numerology
mu=0 #15Khz Sub Carrier Spacing
ttiPeriod=1000 # in us TTI period (15Khz default 1000us)
nDLAbsFrePointA=2645460 #nAbsFrePointA - Abs Freq Point A of the Carrier Center Frequency for in KHz Value: 450000->52600000
nULAbsFrePointA=2525460 #nAbsFrePointA - Abs Freq Point A of the Carrier Center Frequency for in KHz Value: 450000->52600000
nDLBandwidth=10 #Carrier bandwidth for in MHz. Value: 5->400
nULBandwidth=10 #Carrier bandwidth for in MHz. Value: 5->400
nDLFftSize=1024
nULFftSize=1024

nFrameDuplexType=0 # 0 - FDD 1 - TDD
nTddPeriod=0 #TDD priod e.g. DDDS 4
nTddPeriod=10 #[0-9] DDDSUUDDDD, for S it's 6:4:4
sSlotConfig0=0,0,0,0,0,0,0,0,0,0,0,0,0,0 # (0) - DL (1) - UL (2) - GUARD
sSlotConfig1=0,0,0,0,0,0,0,0,0,0,0,0,0,0 # (0) - DL (1) - UL (2) - GUARD
sSlotConfig2=0,0,0,0,0,0,0,0,0,0,0,0,0,0 # (0) - DL (1) - UL (2) - GUARD
sSlotConfig3=0,0,0,0,0,0,2,2,2,2,1,1,1,1 # (0) - DL (1) - UL (2) - GUARD
sSlotConfig4=1,1,1,1,1,1,1,1,1,1,1,1,1,1 # (0) - DL (1) - UL (2) - GUARD
sSlotConfig5=1,1,1,1,1,1,1,1,1,1,1,1,1,1 # (0) - DL (1) - UL (2) - GUARD
sSlotConfig6=0,0,0,0,0,0,0,0,0,0,0,0,0,0 # (0) - DL (1) - UL (2) - GUARD
sSlotConfig7=0,0,0,0,0,0,0,0,0,0,0,0,0,0 # (0) - DL (1) - UL (2) - GUARD
sSlotConfig8=0,0,0,0,0,0,0,0,0,0,0,0,0,0 # (0) - DL (1) - UL (2) - GUARD
sSlotConfig9=0,0,0,0,0,0,0,0,0,0,0,0,0,0 # (0) - DL (1) - UL (2) - GUARD

MTUSize=9600 #maximum transmission unit (MTU) is the size of the largest protocol data unit (PDU) that can be communicated in a single
 #xRAN network layer transaction. supported 1500 bytes and 9600 bytes (Jumbo Frame)
Gps_Alpha=0	#alpha and beta value as in section 9.7.2 of ORAN spec
Gps_Beta=0

ioSleep=1

# Eth 0
duMac0=00:11:22:33:44:66 # asigned MAC of O-DU VF
ruMac0=00:11:22:33:44:55 # O-RU VF for O-RU app
duMac1=00:11:22:33:44:66 # asigned MAC of O-DU VF
ruMac1=00:11:22:33:44:55 # O-RU VF for O-RU app

#Eth 1
duMac2=00:11:22:33:44:77 # asigned MAC of O-DU VF
ruMac2=00:11:22:33:44:44 # O-RU VF for O-RU app
duMac3=00:11:22:33:44:77 # asigned MAC of O-DU VF
ruMac3=00:11:22:33:44:44 # O-RU VF for O-RU app

numSlots=10 #number of slots per IQ files
antC0=./usecase/lte_b/mu0_10mhz/ant_0.bin   #CC0
antC1=./usecase/lte_b/mu0_10mhz/ant_1.bin   #CC0
antC2=./usecase/lte_b/mu0_10mhz/ant_2.bin   #CC0
antC3=./usecase/lte_b/mu0_10mhz/ant_3.bin   #CC0
antC4=./usecase/lte_b/mu0_10mhz/ant_4.bin   #CC1
antC5=./usecase/lte_b/mu0_10mhz/ant_5.bin   #CC1
antC6=./usecase/lte_b/mu0_10mhz/ant_6.bin   #CC1
antC7=./usecase/lte_b/mu0_10mhz/ant_7.bin   #CC1
antC8=./usecase/lte_b/mu0_10mhz/ant_8.bin   #CC2
antC9=./usecase/lte_b/mu0_10mhz/ant_9.bin   #CC2
antC10=./usecase/lte_b/mu0_10mhz/ant_10.bin #CC2
antC11=./usecase/lte_b/mu0_10mhz/ant_11.bin #CC2
antC12=./usecase/lte_b/mu0_10mhz/ant_12.bin #CC3
antC13=./usecase/lte_b/mu0_10mhz/ant_13.bin #CC3
antC14=./usecase/lte_b/mu0_10mhz/ant_14.bin #CC3
antC15=./usecase/lte_b/mu0_10mhz/ant_15.bin #CC3
#DL beamforming weights used based on channel to UE [e.g Wzf = H^H(H*H^H)-1 wher H is MxK matrix, M - number of TX elements and K- number of UEs (the same as Layers)]
DlBfwUe0=./usecase/lte_b/mu0_10mhz/dl_bfw_ue_0.bin   #UE0 weights for TRX antennas [antElmTRx x numRBs x slot points]
DlBfwUe1=./usecase/lte_b/mu0_10mhz/dl_bfw_ue_1.bin   #UE1 weights for TRX antennas [antElmTRx x numRBs x slot points]
DlBfwUe2=./usecase/lte_b/mu0_10mhz/dl_bfw_ue_2.bin   #UE2 weights for TRX antennas [antElmTRx x numRBs x slot points]
DlBfwUe3=./usecase/lte_b/mu0_10mhz/dl_bfw_ue_3.bin   #UE3 weights for TRX antennas [antElmTRx x numRBs x slot points]
DlBfwUe4=./usecase/lte_b/mu0_10mhz/dl_bfw_ue_4.bin   #UE4 weights for TRX antennas [antElmTRx x numRBs x slot points]
DlBfwUe5=./usecase/lte_b/mu0_10mhz/dl_bfw_ue_5.bin   #UE5 weights for TRX antennas [antElmTRx x numRBs x slot points]
DlBfwUe6=./usecase/lte_b/mu0_10mhz/dl_bfw_ue_6.bin   #UE6 weights for TRX antennas [antElmTRx x numRBs x slot points]
DlBfwUe7=./usecase/lte_b/mu0_10mhz/dl_bfw_ue_7.bin   #UE7 weights for TRX antennas [antElmTRx x numRBs x slot points]
DlBfwUe8=./usecase/lte_b/mu0_10mhz/dl_bfw_ue_0.bin   #UE0 weights for TRX antennas [antElmTRx x numRBs x slot points]
DlBfwUe9=./usecase/lte_b/mu0_10mhz/dl_bfw_ue_1.bin   #UE1 weights for TRX antennas [antElmTRx x numRBs x slot points]
DlBfwUe10=./usecase/lte_b/mu0_10mhz/dl_bfw_ue_2.bin   #UE2 weights for TRX antennas [antElmTRx x numRBs x slot points]
DlBfwUe11=./usecase/lte_b/mu0_10mhz/dl_bfw_ue_3.bin   #UE3 weights for TRX antennas [antElmTRx x numRBs x slot points]
DlBfwUe12=./usecase/lte_b/mu0_10mhz/dl_bfw_ue_4.bin   #UE4 weights for TRX antennas [antElmTRx x numRBs x slot points]
DlBfwUe13=./usecase/lte_b/mu0_10mhz/dl_bfw_ue_5.bin   #UE5 weights for TRX antennas [antElmTRx x numRBs x slot points]
DlBfwUe14=./usecase/lte_b/mu0_10mhz/dl_bfw_ue_6.bin   #UE6 weights for TRX antennas [antElmTRx x numRBs x slot points]
DlBfwUe15=./usecase/lte_b/mu0_10mhz/dl_bfw_ue_7.bin   #UE7 weights for TRX antennas [antElmTRx x numRBs x slot points]

#UL beamforming weights used based on channel to UE [e.g Wzf = H^H(H*H^H)-1 wher H is MxK matrix, M - number of RX elements and K- number of UEs (the same as Layers)]
UlBfwUe0=./usecase/lte_b/mu0_10mhz/ul_bfw_ue_0.bin   #UE0 weights for TRX antennas [antElmTRx x numRBs x slot points]
UlBfwUe1=./usecase/lte_b/mu0_10mhz/ul_bfw_ue_1.bin   #UE1 weights for TRX antennas [antElmTRx x numRBs x slot points]
UlBfwUe2=./usecase/lte_b/mu0_10mhz/ul_bfw_ue_2.bin   #UE2 weights for TRX antennas [antElmTRx x numRBs x slot points]
UlBfwUe3=./usecase/lte_b/mu0_10mhz/ul_bfw_ue_3.bin   #UE3 weights for TRX antennas [antElmTRx x numRBs x slot points]
UlBfwUe4=./usecase/lte_b/mu0_10mhz/ul_bfw_ue_4.bin   #UE4 weights for TRX antennas [antElmTRx x numRBs x slot points]
UlBfwUe5=./usecase/lte_b/mu0_10mhz/ul_bfw_ue_5.bin   #UE5 weights for TRX antennas [antElmTRx x numRBs x slot points]
UlBfwUe6=./usecase/lte_b/mu0_10mhz/ul_bfw_ue_6.bin   #UE6 weights for TRX antennas [antElmTRx x numRBs x slot points]
UlBfwUe7=./usecase/lte_b/mu0_10mhz/ul_bfw_ue_7.bin   #UE7 weights for TRX antennas [antElmTRx x numRBs x slot points]
UlBfwUe8=./usecase/lte_b/mu0_10mhz/ul_bfw_ue_0.bin   #UE0 weights for TRX antennas [antElmTRx x numRBs x slot points]
UlBfwUe9=./usecase/lte_b/mu0_10mhz/ul_bfw_ue_1.bin   #UE1 weights for TRX antennas [antElmTRx x numRBs x slot points]
UlBfwUe10=./usecase/lte_b/mu0_10mhz/ul_bfw_ue_2.bin   #UE2 weights for TRX antennas [antElmTRx x numRBs x slot points]
UlBfwUe11=./usecase/lte_b/mu0_10mhz/ul_bfw_ue_3.bin   #UE3 weights for TRX antennas [antElmTRx x numRBs x slot points]
UlBfwUe12=./usecase/lte_b/mu0_10mhz/ul_bfw_ue_4.bin   #UE4 weights for TRX antennas [antElmTRx x numRBs x slot points]
UlBfwUe13=./usecase/lte_b/mu0_10mhz/ul_bfw_ue_5.bin   #UE5 weights for TRX antennas [antElmTRx x numRBs x slot points]
UlBfwUe14=./usecase/lte_b/mu0_10mhz/ul_bfw_ue_6.bin   #UE6 weights for TRX antennas [antElmTRx x numRBs x slot points]
UlBfwUe15=./usecase/lte_b/mu0_10mhz/ul_bfw_ue_7.bin   #UE7 weights for TRX antennas [antElmTRx x numRBs x slot points]


## RACH TODO: update for PRACH
rachEnable=0 # Enable (1)| disable (0) PRACH configuration
#rachOffset=43 # RB offset for prach detection (see RIU spec)
#rachCfgIdx=14 # PRACH config index as per TS36.211 - Table 5.7.1-2 : PRACH Configuration Index
prachConfigIndex=189

srsEnable=0 # Enable (1)| disable (0) SRS
srsSym=8192 # (1<<13) symbol used for SRS (def: sym 13)

###########################################################
##Section Settings
DynamicSectionEna=1 # 1 - enable dynamic section allocation 0 - static sections all RBs are used
extType=1
nPrbElemDl=2
#nRBStart, nRBSize, nStartSymb, numSymb, nBeamIndex, bf_weight_update, compMethod, iqWidth, BeamFormingType
# weight base beams
PrbElemDl0=0,25,0,14,1,1,1,9,1
PrbElemDl1=25,25,0,14,2,1,1,9,1
# Extension Parameters for Beamforming weights
# numBundPrb, numSetBFW, RAD, disableBFW, bfwIqWidth, bfwCompMeth, extType
ExtBfwDl0=25,1,0,0,16,0,1
ExtBfwDl1=25,1,0,0,16,0,1
nPrbElemUl=2
#nRBStart, nRBSize, nStartSymb, numSymb, nBeamIndex, bf_weight_update, compMethod, iqWidth, BeamFormingType
# weight base beams
PrbElemUl0=0,25,0,14,1,1,1,9,1
PrbElemUl1=25,25,0,14,2,1,1,9,1
# Extension Parameters for Beamforming weights
# numBundPrb, numSetBFW, RAD, disableBFW, bfwIqWidth, bfwCompMeth, extType
ExtBfwUl0=25,1,0,0,16,0,1
ExtBfwUl1=25,1,0,0,16,0,1
###########################################################

## control of IQ byte order
iqswap=0 #do swap of IQ before send buffer to eth
nebyteorderswap=1 #do swap of byte order for each I and Q from CPU byte order to network byte order
compression=1 # (1) compression enabled (0) compression disabled
compType=1 # (1) Static Compression with config info sent over the M-Plane (0) Dynamic compression with configuration sent over the C and U Plane
##Debug
debugStop=1 #stop app on 1pps boundary (gps_second % 30)
debugStopCount=0 #if this value is >0 then stop app after x transmission packets, otherwise app will stop at 1pps boundary
bbdevMode=-1 #bbdev mode, -1 = not use bbdev, 0: use software mode, 1: use hardware mode

CPenable=1 #(1) C-Plane is enabled| (0) C-Plane is disabled

##RU Settings
totalBFWeights=32 # Total number of Beamforming Weights on RU

#CID settings
DU_Port_ID_bitwidth=2
BandSector_ID_bitwidth=3
CC_ID_bitwidth=3
RU_Port_ID_bitwidth=8

# LTE-FDD-FR1-CAT-A-NoBF / LTE-FDD-FR1-CAT-A-DBF
# O-RAN.WG4.IOT.0-v02.00
# Table A.2.3.2-1: LTE FDD IOT Profile 2 - LTE-FDD-FR1-CAT-A-NoBF

#U-plane
##Transmission Window
T1a_max_up=437
T1a_min_up=366

#Reception Window U-plane
T2a_max_up=437
T2a_min_up=206

Tadv_cp_dl=125

#Transmission Window
Ta3_max=232 #in us
Ta3_min=70 #in us

#Reception Window
Ta4_max=392
Ta4_min=70

##Transmission Window Fast C-plane UL
T1a_max_cp_ul=356
T1a_min_cp_ul=285

#Reception Window C-plane UL
T2a_max_cp_ul=356 #in us
T2a_min_cp_ul=125 #in us

###########################################################
##O-DU Settings
#C-plane
#Transmission Window Fast C-plane DL
T1a_max_cp_dl=562 #in T1a_max_up + Tcp_adv_dl as per Annex B
T1a_min_cp_dl=491 #in T1a_min_up + Tcp_adv_dl as per Annex B

#O-RU Reception Window C-plane DL
T2a_max_cp_dl=562 #in T2a_max_up + Tcp_adv_dl as per Annex B
T2a_min_cp_dl=331 #in T2a_min_up + Tcp_adv_dl as per Annex B
###########################################################

